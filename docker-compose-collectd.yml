# Docker-compose file for TTN gateway
# Collectd reporting stack
# Requires docker-compose 1.9 or newer

# Version 2.1 for resin compatibility
version: '2.1'
services:
  # The gateway itself
  gateway:
    build:
      context: gateway
      args:
        GW_MACHINE_NAME:
    image: amedee/ttn-gateway
    privileged: true
    network_mode: host
    restart: always
    environment:
      GW_KEY: "${GW_KEY:?Gateway Key is mandatory}"
      GW_ID: "${GW_ID:?Gateway Id is mandatory}"
      GW_EUI: "${GW_EUI}"
      GW_LOGGER: "${GW_LOGGER:-false}"
      GW_PRINT_STATS: "${GW_PRINT_STATS:-true}"
      GW_SPI_SPEED: "${GW_SPI_SPEED}"
      GW_GPS: "${GW_GPS:-false}"
      GW_RESET_PIN: "${GW_RESET_PIN:-22}"
    devices:
      - "/dev/mem:/dev/mem"
    volumes:
      - var_ttn_vol:/var/ttn
  # Collectd
  collectd:
    build:
      context: collectd
      args:
        GW_MACHINE_NAME:
    image: amedee/ttn-collectd
    privileged: true
    network_mode: host
    restart: always
    environment:
      GW_COLLECTD_SERVER: "${GW_COLLECTD_SERVER}"
      GW_COLLECTD_INTERVAL: "${GW_COLLECTD_INTERVAL}"
      GW_BACKPLANE: "${GW_BACKPLANE}"
      GW_TTN_FAN: "${GW_TTN_FAN}"
      GW_BME280: "${GW_BME280:-false}"
      GW_BME280_ADDR: "${GW_BME280_ADDR}"
      GW_BME280_SMBUS: "${GW_BME280_SMBUS}"
    volumes:
      - var_ttn_vol:/var/ttn
  # Fan control for dbrgn's backplane
  fan:
    build:
      context: fan
      args:
        GW_MACHINE_NAME:
    image: amedee/ttn-fan
    privileged: true
    network_mode: host
    restart: always
    environment:
      GW_TTN_FAN: "${GW_TTN_FAN}"
      GW_INFLUXDB_HOST: "${GW_INFLUXDB_HOST}"
      GW_INFLUXDB_DBNAME: "${GW_INFLUXDB_DBNAME}"
      GW_TARGET_TEMP: "${GW_TARGET_TEMP}"
    volumes:
      - var_ttn_vol:/var/ttn
      
  #wifi-connect
  wifi-connect:
    build: ./wifi-connect
    network_mode: "host"
    labels:
      io.balena.features.dbus: '1'
    cap_add:
      - NET_ADMIN
    environment:
      DBUS_SYSTEM_BUS_ADDRESS: "unix:path=/host/run/dbus/system_bus_socket"

volumes:
  var_ttn_vol:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
